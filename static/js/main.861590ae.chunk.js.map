{"version":3,"sources":["components/Landing-Page/Landing-Page-Style.js","components/Landing-Page/Landing-Page.js","components/Character-Page/Character-Container/Character-Container-Style.js","components/Character-Page/Character-Container/Character-Container.js","components/Character-Page/Character-Data/Character-Data-Style.js","components/Character-Page/Character-Data/Character-Data.js","components/Quote-Generator/Quote-Generator-Style.js","components/Quote-Generator/Quote-Generator.js","components/Header/Nav/Nav-Style.js","components/Header/Nav/Nav.js","components/Header/Header-Style.js","components/Header/Header.js","components/Footer/Footer-Style.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPageStyle","styled","div","LandingPage","className","src","alt","to","CharacterContainerStyle","CharacterContainer","props","useState","displayToggle","setDisplayToggle","result","name","image","onClick","event","preventDefault","status","species","gender","origin","location","CharacterDataStyle","CharacterPage","url","Characters","setCharacters","results","setResults","search","setSearch","page","setPage","useEffect","axios","get","then","data","info","catch","error","console","log","nextHandler","window","scrollTo","pages","prevHandler","onChange","e","target","value","type","placeholder","map","index","QuoteGeneratorStyle","quotes","quote","speaker","QuoteGenerator","length","randomNum","Math","floor","random","setQuote","NavStyle","Nav","HeaderStyle","Header","FooterStyle","Footer","href","App","exact","path","component","CharacterData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.861590ae.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const LandingPageStyle = styled.div`\n\tmargin:5%;\n\ttext-align:center;\n.links{\n\tdisplay:flex;\n\tjustify-content:space-evenly;\n\talign-items:center;\n}\n.linkDivs{\n\tdisplay:flex;\n\tflex-direction:column;\n\tjustify-content:space-around;\n\talign-items:center;\n\twidth:50%;\n\tmargin:2%;\n\tpadding:3%;\n\theight:80vh;\n\tborder:2px darkgreen solid;\n\tcolor:black;\n}\n.linkDivsText{\n\twidth:70%;\n\tfont-size:.8rem;\n}\n.linkDivs h3{\n\tfont-size:1.2rem;\n}\n.quoteDiv{\n\tbackground-color:sandybrown;\n}\n.characterDiv{\n\tbackground-color:gold;\n}\nimg{\n\twidth:70%;\n\theight:40vh;\n}\na{\n\ttext-decoration:none;\n\tcolor:darkgreen;\n}\na:hover{\n\tfont-size:1.2rem;\n}\nh2{\n\tFont-size:1.2rem;\n}\n\n@media(max-width:800px){\n.links{\n\tflex-direction:column;\n}\n.linkDivs{\n\twidth:80%;\n\tpadding:2%;\n }\n.linkDivsText{\n\tfont-size:.9rem;\n\twidth:50%;\n}\nimg{\n\theight:35vh;\n\twidth:50%\n }\nh2{\n\tfont-size:1rem;\n}\n@media(max-width:500px){\n\tfont-size:.8rem;\n.linkDivs{\n\twidth:90%;\n}\nimg{\n\twidth:70%;\n\theight:30vh;\n}\n.linkDivsText{\n\twidth:70%\n}\n}\n`;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {LandingPageStyle} from \"./Landing-Page-Style\"\n\nfunction LandingPage(){\nreturn (\n  <LandingPageStyle>\n    <div className=\"landing-page-about\">\n      <h2> Welcome to All Fellow Multi-Dimensional Adventurers!</h2>\n      <p>\n        This is a site dedicated to Rick and Morty. A show that, unlike other adult cartoons, is based around a capable and intelligent main character. Being a cartoon, you expect it to be merely funny. Instead,\n        it's filled with deep emotional scenes, struggles with mental health,the short-comings of man, AND humor. This mixture of deep and humorous is what makes this show so relatable to others. It's a show with a\n        dedicated fan base, and a big following. Heres to hoping it stays around for a while, and continues to bring us the amazing story lines we've come to expect.\n      </p>\n    </div>\n    <div className=\"links\">\n      <div className=\"linkDivs characterDiv\">\n        <h3>The Many Faces of Rick and Morty</h3>\n        <img className=\"characterImage\"src=\"https://live.staticflickr.com/5792/20931966766_3d65f28c27.jpg\" alt=\"Rick and Morty - Where is....well Rick and Morty?\" />\n        <p className=\"linkDivsText\">\n          Rick and Morty is filled with a variety of complex and interesting characters. With the multitude of planets and dimensions it's no wonder that the beings who inhabit them spark interest. Click the link\n          and see all of the character's available information, along with pictures. Search for your favorites or just browse the whole list!.\n        </p>\n        <Link to=\"/Characters\">Characters</Link>\n      </div>\n      <div className=\"linkDivs quoteDiv\">\n        <h3>Quote Generator</h3>\n        <img className=\"quoteImage\" src=\"https://i.ibb.co/3p7sY9p/shutterstock-1736329532-1.jpg\" alt=\"shutterstock-1736329532-1\" />\n        <p className=\"linkDivsText\">\n          One of the best features of Rick and Morty is the dialogue. Click this link to play with our quote generator. Press the button and get a random quote from the show. We've gathered lines from a multitude of\n          characters for a well rounded adventure into the brilliance that is Rick and Morty.\n        </p>\n        <Link to=\"/QuoteGenerator\">Quotes</Link>\n      </div>\n    </div>\n  </LandingPageStyle>\n);\n} \nexport default LandingPage;","import styled from \"styled-components\";\n\nexport const CharacterContainerStyle = styled.div`\n  .character-cards {\n    display: flex;\n    flex-direction: column;\n    border: sandybrown 5px solid;\n    padding: 5%;\n    margin: 2%;\n    align-items: center;\n  }\n  h2 {\n    font-size: 110%;\n  }\n`;\n","import React, {useState} from \"react\";\nimport {CharacterContainerStyle} from \"./Character-Container-Style\"\n\n\n\nfunction CharacterContainer(props) {\n  const [displayToggle, setDisplayToggle] = useState(false);\n\n  return (\n    <CharacterContainerStyle>\n    <div className=\"character-cards\">\n      <h3>{props.result.name}</h3>\n      <img src={props.result.image} alt={props.result.name} />\n      <div className=\"extra-character-info\">\n          <button\n            onClick={(event) => {\n              event.preventDefault();\n              setDisplayToggle(!displayToggle);\n            }}\n          >\n            More info\n          </button>\n        </div>\n        {displayToggle && (\n          <div>\n            <p>Status: {props.result.status}</p>\n            <p>Species: {props.result.species}</p>\n            <p>Gender: {props.result.gender}</p>\n            <p>Origin: {props.result.origin.name}</p>\n            <p>Location: {props.result.location.name}</p>\n          </div>\n        )}\n      </div>\n    </CharacterContainerStyle>\n  );\n}\nexport default CharacterContainer;","import styled from \"styled-components\";\n\nexport const CharacterDataStyle = styled.div`\n  .characters {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  img {\n    width: 70%;\n    margin: 5%;\n  }\n  img:hover {\n    width: 90%;\n  }\n  .character-page-top {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    text-align: center;\n    margin-left: 15%;\n    margin-top: 3%;\n    margin-bottom: 3%;\n  }\n  .searchAndPageButton {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n  }\n  .searchBar {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  input {\n    height: 20%;\n    margin: 5%;\n    margin-top: 1%;\n  }\n  .characterPageButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 10%;\n  }\n  .characterPageButton button {\n    height: 5%;\n    margin-left: 5%;\n    margin-right: 5%;\n  }\n  h1 {\n    font-size: 1.5rem;\n  }\n  h2 {\n    font-size: 1rem;\n  }\n`;\n","import React, {useState, useEffect} from 'react';\nimport CharacterContainer from '../Character-Container/Character-Container';\nimport axios from \"axios\";\nimport {CharacterDataStyle} from \"./Character-Data-Style\"\n\n\n\nfunction CharacterPage() {\n  const [url] = useState(`https://rickandmortyapi.com/api/character/`);\n  const [Characters, setCharacters] = useState({});\n  const [results, setResults] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(`${url}?page=${page}&name=${search}`)\n      .then((result) => {\n        setCharacters(result.data.info);\n        setResults(result.data.results);\n      })\n      .catch((error) => {\n        console.log(error);\n        setPage(1);\n      });\n  }, [search, page, url]);\n  const nextHandler = (event) => {\n    event.preventDefault();\n    window.scrollTo(0, 0);\n    if (page <= Characters.pages) {\n      setPage(page + 1);\n    } else {\n      setPage(1);\n    }\n  };\n  const prevHandler = (event) => {\n    event.preventDefault();\n    window.scrollTo(0, 0);\n    if (page > 1) {\n      setPage(page - 1);\n    } else {\n      setPage(Characters.pages);\n    }\n  };\n  return (\n    <CharacterDataStyle>\n      <div className=\"character-page-top\">\n        <h1>Character List</h1>\n        <p>\n          Welcome to our character list, all the various Rick and Morty\n          Characters are in these following pages. Click on the button at the\n          bottom of each character to see more information about them. Browse\n          through the entire list and spend some time familiarizing yourself\n          with all the interesting beings that make up the Rick and Morty\n          Multiverse. Or, if browsing isn't for you, use our search bar to find\n          your favorite characters!.\n        </p>\n      </div>\n      <div className=\"searchAndPageButton\">\n        <div className=\"search-and-button\">\n          <div className=\"searchBar\">\n            <h2>Search</h2>\n            <input\n              onChange={(e) => {\n                setSearch(e.target.value);\n              }}\n              value={search}\n              type=\"text\"\n              placeholder=\"Character Name\"\n            />\n          </div>\n          <div className=\"characterPageButton\">\n            <button onClick={(event) => prevHandler(event)}>Previous</button>\n            <p>\n              {page}/{Characters.pages}\n            </p>\n            <button onClick={(event) => nextHandler(event)}>Next</button>\n          </div>\n        </div>\n        <div className=\"characters\">\n          {results.map((result, index) => (\n            <CharacterContainer key={index} result={result} />\n          ))}\n        </div>\n        <div className=\"characterPageButton\">\n          <button onClick={(event) => prevHandler(event)}>Previous</button>\n          <p>\n            {page}/{Characters.pages}\n          </p>\n          <button onClick={(event) => nextHandler(event)}>Next</button>\n        </div>\n      </div>\n    </CharacterDataStyle>\n  );\n}\n\nexport default CharacterPage;","import styled from \"styled-components\";\n\nexport const QuoteGeneratorStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  color: gold;\n  text-align: center;\n\n  .page-top {\n    width: 80%;\n    margin-bottom: 5%;\n    color: antiquewhite;\n  }\n  .quoteSection {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 5%;\n    color: antiquewhite;\n    width: 75%;\n    background-color: sandybrown;\n    border: 5px solid gold;\n  }\n  button {\n    background-color: sandybrown;\n    border: solid 2px gold;\n  }\n  .insideQuoteSection {\n    border: solid gold 5px;\n    background-color: black;\n    padding: 5%;\n    width: 80%;\n  }\n  h1 {\n    font-size: 1.5rem;\n  }\n  @media (max-width: 800px) {\n    font-size: 0.9rem;\n  }\n  @media (max-width: 500px) {\n    font-size: 0.8rem;\n  }\n`;\n","import React,{useState} from \"react\";\nimport {QuoteGeneratorStyle} from \"./Quote-Generator-Style\";\n\nlet quotes = [\n    {quote:\"What, so everyone’s supposed to sleep every single night now? You realize that nighttime makes up half of all time?\", speaker:\"Rick\"}\n    ,{quote: \"Listen Morty, I hate to break it to you, but what people call love is just a chemical reaction that compels animals to breed. It hits hard, Morty, then it slowly fades, leaving you stranded in a failing marriage. I did it. Your parents are gonna do it. Break the cycle, Morty. Rise above. Focus on science.\", speaker: \"Rick\"}, \n    {quote: \"Listen to me, Morty. I know that new situations can be       intimidating. You're lookin’ around and it’s all scary and different, but y’know … meeting them head-on, charging into ‘em like a bull —  that’s how we grow as people.\", speaker: \"Rick\"}, \n    {quote: \"I'm a scientist; because I invent, transform, create, and destroy for a living, and when I don't like something about the world, I change it.\", speaker: \"Rick\"}, \n\t{quote: \"Honey, stop raising your father's cholesterol so you can take a hot funeral selfie.\", speaker: \"Beth\"}, \n\t{quote: \"Now if you'll excuse me, I've got a quick solo adventure to go on and this one will not be directed by Ron Howard.\",speaker: \"Rick\"},\n    {quote: \"The universe is basically an animal. It grazes on the ordinary. It creates infinite idiots just to eat them.\" ,speaker: \"Rick\"}, \n    {quote: \"To live is to risk it all; otherwise you're just an inert chunk of randomly assembled molecules drifting wherever the universe blows you...\", speaker: \"Rick\"}, \n\t{quote: \"Don’t get drawn into the culture, Morty. Stealing stuff is about the stuff, not the stealing.\", speaker: \"Rick\"}, \n\t{quote: \"Does evil exist, and if so, can one detect and measure it? Rhetorical question. The answer’s yes, you just have to be a genius.\", \n\tspeaker: \"Rick\"}, \n\t{quote: \"Having a family doesn’t mean that you stop being an individual. You know the best thing you can do for the people that depend on you? Be honest with them, even if it means setting them free.\", speaker: \"Mr Meeseeks\"},\n    {quote: \"I realize now I’m attracted to you for the same reason I can’t be with you; you can’t change. And I have no problem with that but it clearly means I have a problem with myself.\", speaker: \"Unity\"},\n\t{quote: \"Mr. President, if I’ve learned one thing today it’s that sometimes you have to not give a f*ck!\",speaker: \"Morty\"},\n\t{quote: \"Nobody exists on purpose\", speaker: \"Morty\"},\n\t{quote: \"Don’t make the same mistakes I made. Don’t deify the people who leave you.\", speaker: \"Beth\"},\n\t{quote: \"How many of these are just horrible mistakes I made? I mean, maybe I’d stop making so many if I let myself learn from them.\", speaker: \"Morty\"},\n\t{quote: \"Life is effort. I’ll stop when I die!\", speaker: \"Jerry\"}]\n;\n\nfunction QuoteGenerator(){\n    let length = quotes.length;\n    let randomNum = Math.floor(Math.random() * length);\n    let [quote, setQuote] = useState([]);\n    const buttonHandle = (event) => {\n      event.preventDefault();\n      setQuote(quotes[randomNum]);\n    };\n    return (\n      <QuoteGeneratorStyle>\n        <div className=\"page-top\">\n          <h1>Quote Generator</h1>\n          <p>\n            Our quote generator is easy to use and fun!, just click the button\n            below to see a randomized quote from Rick and Morty. It will soon\n            have you in stitches or make you stop and think.\n          </p>\n        </div>\n        <div className=\"quoteSection\">\n          <div className=\"insideQuoteSection\">\n            <p>{quotes[randomNum].quote}</p>\n            <p> - {quotes[randomNum].speaker}</p>\n            <button onClick={buttonHandle}>New Quote</button>\n          </div>\n        </div>\n      </QuoteGeneratorStyle>\n    );\n}\nexport default QuoteGenerator;","import styled from 'styled-components';\n\nexport const NavStyle = styled.div`\n  display: flex;\n  justify-content: space-around;\n  text-align: center;\n  width: 90%;\n  a {\n    color: black;\n    text-decoration: none;\n    width: 20%;\n    padding: 1.5%;\n    color: black;\n    margin-bottom: 2%;\n    font-size: 0.1.2rem;\n  }\n  a:hover {\n    color: darkgreen;\n    font-size: 1.3rem;\n  }\n\n  @media (max-width: 800px) {\n    a {\n      font-size: 0.8rem;\n      width: 40%;\n    }\n    a:hover {\n      font-size: 1rem;\n      color: darkgreen;\n    }\n  }\n`;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {NavStyle} from \"./Nav-Style\";\n\n\nfunction Nav(){\n    return (\n      <NavStyle>\n          <Link to= \"/\"> Home </Link>\n          <Link to= \"/Characters\">Characters</Link>\n          <Link to=\"/QuoteGenerator\">Quote Generator </Link>\n      </NavStyle>\n    );\n}\n\nexport default Nav;","import styled from 'styled-components';\n\n\nexport const HeaderStyle = styled.div`\n\tposition:relative;\n\ttext-align:center;\n\tdisplay:flex;\n\tflex-direction:column;\n\tjustify:content:center;\n\talign-items:center;\n\tfont-family:cursive;\n\tcolor:black;\n\tmargin:5%;\n\nimg{\n\theight: 50vh;\n\twidth:95%;\n}\n.image-text{\n\tposition:absolute;\n\tdisplay:flex;\n\tflex-direction:column;\n\tjustify-content:center;\n\talign-items:center;\n\twidth:90%;\n}\n@media(max-width:800px){\n\timg{\n\t\theight:40vh;\n\t}\n\t.image-text{\n\tfont-size:.7rem;\n\t}\n}\n@media(max-width:500px){\n\timg{\n\t\theight:30vh;\n\t}\n\t.image-text{\n\t\tfont-size:.6rem;\n\t}\n}\n`;","import React from \"react\";\nimport Nav from './Nav/Nav';\nimport {HeaderStyle} from \"./Header-Style\";\n\n\nfunction Header(){\n    return (\n      <HeaderStyle>\n        <div className=\"image-text\">\n          <Nav />\n          <h1>Rick and Morty Fan Site!</h1>\n          <h2>\"wubba lubba dub dub\"</h2>\n        </div>\n        <img src=\"https://live.staticflickr.com/7622/27982634645_bdbc95feec_b.jpg\"alt=\"Rick and Morty with blurred   background - Menidon\" />\n      </HeaderStyle>\n    );\n}\nexport default Header;","import styled from \"styled-components\";\n\nexport const FooterStyle = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align:center;\n  margin: 2% 0% 2% 0%;\n  a {\n    color: green;\n  }\n  a:hover {\n    font-size: 1.2rem;\n  }\n`;\n","import React from \"react\";\nimport {FooterStyle} from \"./Footer-Style\"\n\nfunction Footer(){\n    return (\n      <FooterStyle>\n        <h4> if you liked this site, check out the creators GitHub</h4>\n        <a href=\"https://github.com/Audrey-Willis\">Audrey's GitHub</a>\n      </FooterStyle>\n    );\n}\nexport default Footer;","import React from 'react';\nimport {BrowserRouter as Router,Route, BrowserRouter} from \"react-router-dom\";\nimport LandingPage from './components/Landing-Page/Landing-Page';\nimport CharacterData from \"./components/Character-Page/Character-Data/Character-Data\";\nimport QuoteGenerator from './components/Quote-Generator/Quote-Generator';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\n\n\n\nfunction App() {\n  return (\n      <BrowserRouter>\n        <Header />\n        <Route exact path = \"/\" component={LandingPage} />\n        <Route path=\"/Characters\"component={CharacterData} />\n        <Route path= \"/QuoteGenerator\" component={QuoteGenerator} />\n        <Footer />\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}